# Put this in the file: .github/workflows/verify.yml

name: verify
on: [push]

jobs:
  frontend:
    name: Frontend linting & tests
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.8.0
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Run javascript linter
        run: |
          yarn lint:js
      - name: Run stylesheet linter
        run: |
          yarn lint:css

  backend:
    name: Backend linting & tests
    runs-on: ubuntu-18.04
    services:
      db:
        image: mariadb:10.4.8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        ports: ["3306:3306"]
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.8.0
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: Setup test database
        env:
          RAILS_ENV: test
          CLOUDAMQP_URL: 'amqp://127.0.0.1:5672'
          DATABASE_URL: 'mysql2://root:@127.0.0.1:3306/backoffice_test'
        run: |
          bin/bundle exec rails db:create db:migrate

      - name: Run tests
        env:
          RAILS_ENV: test
          CLOUDAMQP_URL: 'amqp://127.0.0.1:5672'
          DATABASE_URL: 'mysql2://root:@127.0.0.1:3306/backoffice_test'
        run: bin/bundle exec rspec

      - name: Run linters
        env:
          RAILS_ENV: test
          CLOUDAMQP_URL: 'amqp://127.0.0.1:5672'
          DATABASE_URL: 'mysql2://root:@127.0.0.1:3306/backoffice_test'
        run: bin/rubocop

      - name: Run easybill engine tests
        env:
          RAILS_ENV: test
          CLOUDAMQP_URL: 'amqp://127.0.0.1:5672'
          DATABASE_URL: 'mysql2://root:@127.0.0.1:3306/backoffice_test'
        run: bin/bundle exec rspec easybill/spec

      - name: Run easybill engine linters
        env:
          RAILS_ENV: test
          CLOUDAMQP_URL: 'amqp://127.0.0.1:5672'
          DATABASE_URL: 'mysql2://root:@127.0.0.1:3306/backoffice_test'
        run: bin/rubocop easybill
